{"version":3,"sources":["file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LabelTickCtrl.ts"],"names":["_decorator","Component","Label","CCString","CCInteger","error","ccclass","property","LabelTickCtrl","type","multiline","curNumber","intervalPerUpdate","finalNumber","tickLabel","duration","label","string","prefix","toFixed","decimalPlaces","suffix","unschedule","updateForNumber","schedule","dt","stop"],"mappings":";;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;;;;;;;AAC1DC,MAAAA,O,GAAsBN,U,CAAtBM,O;AAASC,MAAAA,Q,GAAaP,U,CAAbO,Q;;+BAGJC,a,WADZF,OAAO,CAAC,eAAD,C,UAGLC,QAAQ,CAACL,KAAD,C,UAGRK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UAGRI,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,SAAS,EAAE;AAA7B,OAAD,C,UAIRH,QAAQ,CAACH,SAAD,C;;;;;;;;;;;;;;;;;;;;gBAGCO,S,GAAoB,I;gBACpBC,iB,GAA4B,I;gBAC5BC,W,GAAsB,I;;;;;;eAEhCC,S,GAAA,mBAAUH,SAAV,EAAoCE,WAApC,EAAyDE,QAAzD,EAA+E;AAAA,cAAtBA,QAAsB;AAAtBA,YAAAA,QAAsB,GAAH,CAAG;AAAA;;AAE7E,cAAI,OAAOF,WAAP,IAAsB,QAA1B,EAAoC;AAClC,mBAAOR,KAAK,CAAC,oBAAD,CAAZ;AACD;;AAEDM,UAAAA,SAAS,GAAIA,SAAS,KAAK,IAAd,GAAqB,KAAKA,SAA1B,GAAsCA,SAAnD;;AACA,cAAIA,SAAS,KAAK,IAAd,IAAsBA,SAAS,IAAIE,WAAvC,EAAoD;AAClD,iBAAKF,SAAL,GAAiBE,WAAjB;AACA,iBAAKA,WAAL,GAAmBA,WAAnB;AACA,iBAAKG,KAAL,CAAWC,MAAX,QAAuB,KAAKC,MAA5B,GAAqC,KAAKL,WAAL,CAAiBM,OAAjB,CAAyB,KAAKC,aAA9B,CAArC,GAAoF,KAAKC,MAAzF;AACD,WAJD,MAKK;AACH,iBAAKV,SAAL,GAAiBA,SAAjB;AACA,iBAAKE,WAAL,GAAmBA,WAAnB;AACA,iBAAKD,iBAAL,GAAyB,CAACC,WAAW,GAAGF,SAAf,KAA6BI,QAAQ,GAAG,EAAxC,CAAzB;AACA,iBAAKO,UAAL,CAAgB,KAAKC,eAArB;AACA,iBAAKC,QAAL,CAAc,KAAKD,eAAnB,EAAoC,IAApC;AACA,iBAAKP,KAAL,CAAWC,MAAX,QAAuB,KAAKC,MAA5B,GAAqC,KAAKP,SAAL,CAAeQ,OAAf,CAAuB,KAAKC,aAA5B,CAArC,GAAkF,KAAKC,MAAvF;AACD;AACF,S;;eAGDE,e,GAAA,yBAAgBE,EAAhB,EAAoB;AAClB,eAAKd,SAAL,IAAkB,KAAKC,iBAAvB;;AACA,cAAK,KAAKA,iBAAL,GAAyB,CAAzB,IAA8B,KAAKD,SAAL,GAAiB,KAAKE,WAArD,IACE,KAAKD,iBAAL,GAAyB,CAAzB,IAA8B,KAAKD,SAAL,GAAiB,KAAKE,WAD1D,EAEE;AACA,iBAAKF,SAAL,GAAiB,KAAKE,WAAtB;AACA,iBAAKS,UAAL,CAAgB,KAAKC,eAArB;AACD;;AACD,eAAKP,KAAL,CAAWC,MAAX,QAAuB,KAAKC,MAA5B,GAAqC,KAAKP,SAAL,CAAeQ,OAAf,CAAuB,KAAKC,aAA5B,CAArC,GAAkF,KAAKC,MAAvF;AACD,S;;eAEDK,I,GAAA,gBAAO;AACL,eAAKJ,UAAL,CAAgB,KAAKC,eAArB;AACA,eAAKZ,SAAL,GAAiB,IAAjB;AACA,eAAKE,WAAL,GAAmB,IAAnB;AACD,S;;;QAzDgCZ,S;;;;;iBAGX,I;;;;;;;iBAGE,E;;;;;;;iBAGA,E;;;;;;;iBAIO,C","sourcesContent":["import { _decorator, Component, Node, Label, CCString, CCInteger, error } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"LabelTickCtrl\")\nexport class LabelTickCtrl extends Component {\n\n  @property(Label)\n  public label: Label = null;\n\n  @property({ type: CCString })\n  public prefix: string = '';\n\n  @property({ type: CCString, multiline: true })\n  public suffix: string = '';\n\n  //保留小数点后几位\n  @property(CCInteger)\n  public decimalPlaces: number = 0;\n\n  protected curNumber: number = null;\n  protected intervalPerUpdate: number = null;\n  protected finalNumber: number = null;\n\n  tickLabel(curNumber: number | null, finalNumber: number, duration: number = 1) {\n\n    if (typeof finalNumber != 'number') {\n      return error('finalNumber 必须是数字哦');\n    }\n\n    curNumber = (curNumber === null ? this.curNumber : curNumber);\n    if (curNumber === null || curNumber == finalNumber) {\n      this.curNumber = finalNumber;\n      this.finalNumber = finalNumber;\n      this.label.string = `${this.prefix}${this.finalNumber.toFixed(this.decimalPlaces)}${this.suffix}`;\n    }\n    else {\n      this.curNumber = curNumber;\n      this.finalNumber = finalNumber;\n      this.intervalPerUpdate = (finalNumber - curNumber) / (duration * 33);\n      this.unschedule(this.updateForNumber);\n      this.schedule(this.updateForNumber, 0.03);\n      this.label.string = `${this.prefix}${this.curNumber.toFixed(this.decimalPlaces)}${this.suffix}`;\n    }\n  }\n\n\n  updateForNumber(dt) {\n    this.curNumber += this.intervalPerUpdate;\n    if ((this.intervalPerUpdate > 0 && this.curNumber > this.finalNumber)\n      || (this.intervalPerUpdate < 0 && this.curNumber < this.finalNumber)\n    ) {\n      this.curNumber = this.finalNumber;\n      this.unschedule(this.updateForNumber);\n    }\n    this.label.string = `${this.prefix}${this.curNumber.toFixed(this.decimalPlaces)}${this.suffix}`;\n  }\n\n  stop() {\n    this.unschedule(this.updateForNumber);\n    this.curNumber = null;\n    this.finalNumber = null;\n  }\n}\n"]}
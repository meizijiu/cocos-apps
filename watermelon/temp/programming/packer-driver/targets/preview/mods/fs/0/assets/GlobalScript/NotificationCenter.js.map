{"version":3,"sources":["file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/NotificationCenter.ts"],"names":["assert","NCKeys","IS_MUSIC_ON_CHANGED","EVENT_HIDE","EVENT_SHOW","MERGE_NEW_FRUIT","RESET_GAME","REBORN_GAME","REFRESH_CUR_FRUIT","NotificationCenter","_observers","addObserver","key","fun","target","push","removeObserver","filter","item","postNotice","data","forEach","call"],"mappings":";;;;;;;;AAASA,MAAAA,M,OAAAA,M;;;;;;;AAET;wBACWC,M,GAAS;AAClBC,QAAAA,mBAAmB,EAAE,qBADH;AAC0B;AAC5CC,QAAAA,UAAU,EAAE,YAFM;AAGlBC,QAAAA,UAAU,EAAE,YAHM;AAKlBC,QAAAA,eAAe,EAAE,iBALC;AAMlBC,QAAAA,UAAU,EAAE,YANM;AAOlBC,QAAAA,WAAW,EAAE,aAPK;AAQlBC,QAAAA,iBAAiB,EAAE;AARD,O;;oCAWTC,kB,GAAqB;AAE9BC,QAAAA,UAAU,EAAE,EAFkB;AAG9BC,QAAAA,WAAW,EAAE,qBAAUC,GAAV,EAAoBC,GAApB,EAA8BC,MAA9B,EAA2C;AAEtDd,UAAAA,MAAM,CAACY,GAAG,IAAI,IAAR,EAAc,mBAAd,CAAN;AACAZ,UAAAA,MAAM,CAACa,GAAG,IAAI,IAAR,EAAc,mBAAd,CAAN;AACAb,UAAAA,MAAM,CAACc,MAAM,IAAI,IAAX,EAAiB,sBAAjB,CAAN;AAEA,cAAI,KAAKJ,UAAL,CAAgBE,GAAhB,KAAwB,IAA5B,EACE,KAAKF,UAAL,CAAgBE,GAAhB,IAAuB,EAAvB;;AAEF,eAAKF,UAAL,CAAgBE,GAAhB,EAAqBG,IAArB,CAA0B;AAAEF,YAAAA,GAAG,EAAEA,GAAP;AAAYC,YAAAA,MAAM,EAAEA;AAApB,WAA1B;AACD,SAb6B;AAe9BE,QAAAA,cAAc,EAAE,wBAAUJ,GAAV,EAAoBE,MAApB,EAAiC;AAC/C,cAAIA,MAAM,IAAI,IAAd,EACEd,MAAM,CAAC,KAAD,EAAQ,yBAAR,CAAN;AAEF,cAAI,KAAKU,UAAL,CAAgBE,GAAhB,KAAwB,IAA5B,EACE;AAEF,eAAKF,UAAL,CAAgBE,GAAhB,IAAuB,KAAKF,UAAL,CAAgBE,GAAhB,EAAqBK,MAArB,CAA4B,UAAUC,IAAV,EAAqB;AACtE,mBAAOA,IAAI,CAACJ,MAAL,IAAeA,MAAtB;AACD,WAFsB,CAAvB;AAGD,SAzB6B;AA2B9BK,QAAAA,UAAU,EAAE,oBAAUP,GAAV,EAAoBQ,IAApB,EAA+B;AAEzC,cAAI,KAAKV,UAAL,CAAgBE,GAAhB,KAAwB,IAA5B,EACE;;AAEF,eAAKF,UAAL,CAAgBE,GAAhB,EAAqBS,OAArB,CAA6B,UAAUH,IAAV,EAAqB;AAChDA,YAAAA,IAAI,CAACL,GAAL,CAASS,IAAT,CAAcJ,IAAI,CAACJ,MAAnB,EAA2BM,IAA3B;AACD,WAFD;AAGD;AAnC6B,O,GAsChC;AACA;AAEA","sourcesContent":["import { assert } from \"cc\";\n\n//一个全局的通知中心\nexport let NCKeys = {\n  IS_MUSIC_ON_CHANGED: 'IS_MUSIC_ON_CHANGED', //\n  EVENT_HIDE: 'EVENT_HIDE',\n  EVENT_SHOW: 'EVENT_SHOW',\n\n  MERGE_NEW_FRUIT: 'MERGE_NEW_FRUIT',\n  RESET_GAME: 'RESET_GAME',\n  REBORN_GAME: 'REBORN_GAME',\n  REFRESH_CUR_FRUIT: 'REFRESH_CUR_FRUIT',\n}\n\nexport let NotificationCenter = {\n\n  _observers: {} as any,\n  addObserver: function (key: any, fun: any, target: any) {\n\n    assert(key != null, 'key  cant be null');\n    assert(fun != null, 'fun  cant be null');\n    assert(target != null, 'target  cant be null');\n\n    if (this._observers[key] == null)\n      this._observers[key] = [];\n\n    this._observers[key].push({ fun: fun, target: target });\n  },\n\n  removeObserver: function (key: any, target: any) {\n    if (target == null)\n      assert(false, 'target must not be null');\n\n    if (this._observers[key] == null)\n      return;\n\n    this._observers[key] = this._observers[key].filter(function (item: any) {\n      return item.target != target;\n    });\n  },\n\n  postNotice: function (key: any, data: any) {\n\n    if (this._observers[key] == null)\n      return;\n\n    this._observers[key].forEach(function (item: any) {\n      item.fun.call(item.target, data);\n    })\n  },\n};\n\n// window.NotificationCenter = NotificationCenter;\n// window.NCKeys = NCKeys;\n\n// export {NotificationCenter, NCKeys};\n\n\n"]}
{"version":3,"sources":["file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/ProgressBarTickCtrl.ts"],"names":["_decorator","Component","ProgressBar","error","ccclass","property","ProgressBarTickCtrl","curNumber","intervalPerUpdate","finalNumber","tickProgress","duration","progressBar","progress","unschedule","updateForNumber","schedule","dt","stop"],"mappings":";;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;;;;;;;AAC3CC,MAAAA,O,GAAsBJ,U,CAAtBI,O;AAASC,MAAAA,Q,GAAaL,U,CAAbK,Q;;qCAGJC,mB,WADZF,OAAO,CAAC,qBAAD,C,UAELC,QAAQ,CAACH,WAAD,C;;;;;;;;;;;;;;gBAICK,S,GAAoB,I;gBACpBC,iB,GAA4B,I;gBAC5BC,W,GAAsB,I;;;;;;eAEhCC,Y,GAAA,sBAAaH,SAAb,EAAuCE,WAAvC,EAA4DE,QAA5D,EAAkF;AAAA,cAAtBA,QAAsB;AAAtBA,YAAAA,QAAsB,GAAH,CAAG;AAAA;;AAEhF,cAAI,OAAOF,WAAP,IAAsB,QAA1B,EAAoC;AAClC,mBAAON,KAAK,CAAC,oBAAD,CAAZ;AACD;;AAEDI,UAAAA,SAAS,GAAIA,SAAS,KAAK,IAAd,GAAqB,KAAKA,SAA1B,GAAsCA,SAAnD;;AACA,cAAIA,SAAS,KAAK,IAAd,IAAsBA,SAAS,IAAIE,WAAvC,EAAoD;AAClD,iBAAKF,SAAL,GAAiBE,WAAjB;AACA,iBAAKA,WAAL,GAAmBA,WAAnB;AACA,iBAAKG,WAAL,CAAiBC,QAAjB,GAA4BJ,WAA5B;AACD,WAJD,MAKK;AACH,iBAAKF,SAAL,GAAiBA,SAAjB;AACA,iBAAKE,WAAL,GAAmBA,WAAnB;AACA,iBAAKD,iBAAL,GAAyB,CAACC,WAAW,GAAGF,SAAf,KAA6BI,QAAQ,GAAG,EAAxC,CAAzB;AACA,iBAAKG,UAAL,CAAgB,KAAKC,eAArB;AACA,iBAAKC,QAAL,CAAc,KAAKD,eAAnB,EAAoC,IAApC;AACA,iBAAKH,WAAL,CAAiBC,QAAjB,GAA4B,KAAKN,SAAjC;AACD;AACF,S;;eAGDQ,e,GAAA,yBAAgBE,EAAhB,EAAoB;AAClB,eAAKV,SAAL,IAAkB,KAAKC,iBAAvB;;AACA,cAAK,KAAKA,iBAAL,GAAyB,CAAzB,IAA8B,KAAKD,SAAL,GAAiB,KAAKE,WAArD,IACE,KAAKD,iBAAL,GAAyB,CAAzB,IAA8B,KAAKD,SAAL,GAAiB,KAAKE,WAD1D,EAEE;AACA,iBAAKF,SAAL,GAAiB,KAAKE,WAAtB;AACA,iBAAKK,UAAL,CAAgB,KAAKC,eAArB;AACD;;AACD,eAAKH,WAAL,CAAiBC,QAAjB,GAA4B,KAAKN,SAAjC;AACD,S;;eAEDW,I,GAAA,gBAAO;AACL,eAAKJ,UAAL,CAAgB,KAAKC,eAArB;AACA,eAAKR,SAAL,GAAiB,IAAjB;AACA,eAAKE,WAAL,GAAmB,IAAnB;AACD,S;;;QA/CsCR,S;;;;;iBAEL,I","sourcesContent":["import { _decorator, Component, Node, ProgressBar, error } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ProgressBarTickCtrl')\nexport class ProgressBarTickCtrl extends Component {\n  @property(ProgressBar)\n  public progressBar: ProgressBar = null;\n\n\n  protected curNumber: number = null;\n  protected intervalPerUpdate: number = null;\n  protected finalNumber: number = null;\n\n  tickProgress(curNumber: number | null, finalNumber: number, duration: number = 1) {\n\n    if (typeof finalNumber != 'number') {\n      return error('finalNumber 必须是数字哦');\n    }\n\n    curNumber = (curNumber === null ? this.curNumber : curNumber);\n    if (curNumber === null || curNumber == finalNumber) {\n      this.curNumber = finalNumber;\n      this.finalNumber = finalNumber;\n      this.progressBar.progress = finalNumber;\n    }\n    else {\n      this.curNumber = curNumber;\n      this.finalNumber = finalNumber;\n      this.intervalPerUpdate = (finalNumber - curNumber) / (duration * 33);\n      this.unschedule(this.updateForNumber);\n      this.schedule(this.updateForNumber, 0.03);\n      this.progressBar.progress = this.curNumber;\n    }\n  }\n\n\n  updateForNumber(dt) {\n    this.curNumber += this.intervalPerUpdate;\n    if ((this.intervalPerUpdate > 0 && this.curNumber > this.finalNumber)\n      || (this.intervalPerUpdate < 0 && this.curNumber < this.finalNumber)\n    ) {\n      this.curNumber = this.finalNumber;\n      this.unschedule(this.updateForNumber);\n    }\n    this.progressBar.progress = this.curNumber;\n  }\n\n  stop() {\n    this.unschedule(this.updateForNumber);\n    this.curNumber = null;\n    this.finalNumber = null;\n  }\n}\n"]}
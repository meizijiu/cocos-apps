{"version":3,"sources":["file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/AudioHelper.ts"],"names":["find","log","AudioCtrl","AudioHelper","_inited","init","innerAudios","play","nodeName","clipIndex","loop","vol","newInstance","node","audioCtrl","getComponent","stop","getPlayState","getInnerAudioUrl","physicsSceneAudioNodeClipNames","needLoadAudioNode"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,I,OAAAA,I;AAAMC,MAAAA,G,OAAAA,G;;AADNC,MAAAA,S,cAAAA,S;;;;;;;AAET;AACA;AAGA;6BACWC,W,GAAc;AAEvBC,QAAAA,OAAO,EAAE,KAFc;AAGvBC,QAAAA,IAHuB,kBAGhB;AACL,cAAI,KAAKD,OAAT,EACE;AAGF,eAAKA,OAAL,GAAe,IAAf,CALK,CAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,SAjBsB;AAoBvBE,QAAAA,WAAW,EAAE,EApBU;AAsBvB;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAC,QAAAA,IAvCuB,gBAuClBC,QAvCkB,EAuCAC,SAvCA,EAuCgBC,IAvChB,EAuC8BC,GAvC9B,EAuCyCC,WAvCzC,EAuC8D;AAAA,cAA9CF,IAA8C;AAA9CA,YAAAA,IAA8C,GAAvC,KAAuC;AAAA;;AAAA,cAAhCC,GAAgC;AAAhCA,YAAAA,GAAgC,GAA1B,GAA0B;AAAA;;AAAA,cAArBC,WAAqB;AAArBA,YAAAA,WAAqB,GAAP,KAAO;AAAA;;AAEnF;AACA;AACA,cAAIC,IAAU,GAAGb,IAAI,CAACQ,QAAD,CAArB;;AACA,cAAIK,IAAI,IAAI,IAAZ,EAAkB;AAChB,mBAAOZ,GAAG,CAAC,gCAAgCO,QAAjC,CAAV;AACD;;AACD,cAAIM,SAAS,GAAGD,IAAI,CAACE,YAAL;AAAA;AAAA,qCAAhB;AACAD,UAAAA,SAAS,CAACP,IAAV,CAAeE,SAAf,EAA0BC,IAA1B,EAAgCC,GAAhC;AAED,SAlDsB;AAoDvBK,QAAAA,IApDuB,gBAoDlBR,QApDkB,EAoDAC,SApDA,EAoDmB;AAExC,cAAII,IAAU,GAAGb,IAAI,CAACQ,QAAD,CAArB;;AACA,cAAIK,IAAI,IAAI,IAAZ,EAAkB;AAChB,mBAAOZ,GAAG,CAAC,gCAAgCO,QAAjC,CAAV;AACD;;AACD,cAAIM,SAAoB,GAAGD,IAAI,CAACE,YAAL;AAAA;AAAA,qCAA3B;AACAD,UAAAA,SAAS,CAACE,IAAV,CAAeP,SAAf;AAED,SA7DsB;AA+DvBQ,QAAAA,YA/DuB,wBA+DVT,QA/DU,EA+DQC,SA/DR,EA+D2B;AAEhD,cAAII,IAAU,GAAGb,IAAI,CAACQ,QAAD,CAArB;;AACA,cAAIK,IAAI,IAAI,IAAZ,EAAkB;AAChB,mBAAOZ,GAAG,CAAC,gCAAgCO,QAAjC,CAAV;AACD;;AACD,cAAIM,SAAoB,GAAGD,IAAI,CAACE,YAAL;AAAA;AAAA,qCAA3B;AACA,iBAAOD,SAAS,CAACG,YAAV,CAAuBR,SAAvB,CAAP;AAED,SAxEsB;AA0EvBS,QAAAA,gBA1EuB,4BA0ENV,QA1EM,EA0EYC,SA1EZ,EA0E+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,iBAAO,KAAKU,8BAAL,CAAoCV,SAApC,CAAP;AACD,SAxFsB;AA0FvB;AACAU,QAAAA,8BAA8B,EAAE,CAC9B,6BAD8B,EAE9B,2BAF8B,EAG9B,mBAH8B,EAI9B,+BAJ8B,CA3FT;AAkGvBC,QAAAA,iBAlGuB,+BAkGH;AAClB,iBAAO,IAAP;AACD;AApGsB,O","sourcesContent":["import { AudioCtrl } from \"./AudioCtrl\";\nimport { find, log, Node } from \"cc\";\n// import { PlatformNotify } from \"../resources/Platform/PlatformNotify\";\n// import { PlatformJudge } from \"../resources/Platform/PlatformJudge\";\n\n\n//特殊针对了，魅族，微信，和QQ,字节\nexport let AudioHelper = {\n\n  _inited: false,\n  init() {\n    if (this._inited)\n      return;\n\n\n    this._inited = true;\n    // PlatformNotify.addObserver(PlatformNotify.BGM_SWITCH, (val) => {\n    //   if (val) {\n    //     this.play('audio', CLIP.BGM, true);\n    //   }\n    //   else {\n    //     this.stop('audio', CLIP.BGM);\n    //   }\n    // }, this);\n  },\n\n\n  innerAudios: {},\n\n  // registered: false,\n  // registerEvent() {\n  //   if (this.registered)\n  //     return;\n\n  //   this.registered = true;\n\n  //   NotificationCenter.addObserver(NCKeys.IS_MUSIC_ON_CHANGED, function (val) {\n  //     if (val == false) {\n  //       for (let key in this.innerAudios) {\n  //         this.innerAudios[key].stop();\n  //       }\n  //     }\n  //   }, this);\n\n  // },\n\n  play(nodeName: string, clipIndex: any, loop = false, vol = 1.0, newInstance = false) {\n\n    // if (LocalData.isMusicOn == false)\n    //   return;\n    let node: Node = find(nodeName) as Node;\n    if (node == null) {\n      return log('audioHelper node not found:' + nodeName);\n    }\n    let audioCtrl = node.getComponent(AudioCtrl) as AudioCtrl;\n    audioCtrl.play(clipIndex, loop, vol);\n\n  },\n\n  stop(nodeName: string, clipIndex: number) {\n\n    let node: Node = find(nodeName) as Node;\n    if (node == null) {\n      return log('audioHelper node not found:' + nodeName);\n    }\n    let audioCtrl: AudioCtrl = node.getComponent(AudioCtrl) as AudioCtrl;\n    audioCtrl.stop(clipIndex);\n\n  },\n\n  getPlayState(nodeName: string, clipIndex: number) {\n\n    let node: Node = find(nodeName) as Node;\n    if (node == null) {\n      return log('audioHelper node not found:' + nodeName);\n    }\n    let audioCtrl: AudioCtrl = node.getComponent(AudioCtrl) as AudioCtrl;\n    return audioCtrl.getPlayState(clipIndex);\n\n  },\n\n  getInnerAudioUrl(nodeName: string, clipIndex: number) {\n    // if (nodeName == 'audio') {\n    //   if (clipEnum == START_SCENE_CLIP) {\n    //     return this.startSceneAudioNodeClipNames[clipIndex];\n    //   }\n    //   else {\n    //     return this.gameSceneAudioNodeClipNames[clipIndex];\n    //   }\n    // }\n    // else if (nodeName == 'gunAudio') {\n    //   return this.gameSceneGunAudioNodeClipNames[clipIndex]\n    // }\n\n    return this.physicsSceneAudioNodeClipNames[clipIndex];\n  },\n\n  //开始场景audio Node上挂载的的音频的名字\n  physicsSceneAudioNodeClipNames: [\n    'res/audio/normal_button.mp3',\n    'res/audio/back_button.mp3',\n    'res/audio/bgm.mp3',\n    'res/audio/planet_complete.mp3',\n  ],\n\n  needLoadAudioNode() {\n    return true;\n  }\n\n}\n"]}
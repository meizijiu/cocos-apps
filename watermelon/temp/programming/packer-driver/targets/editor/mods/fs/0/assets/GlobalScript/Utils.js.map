{"version":3,"sources":["file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/Utils.ts"],"names":["isValid","loader","log","Quat","v3","fruit_config","_ax","_ay","_az","_bx","_by","_bz","Utils","popAlert","config","parent","msg","popToast","duration","node","formatSecondToHMS","value","hours","Math","floor","min","sec","offsetDay","fromTime","toTime","fromString","dayjs","format","toString","diff","getCurTime","localTime","unix","path2repeatTime","loadResWithCorrection","url","type","completeCallback","_loadResWithCorrection","loadRes","err","resource","sureCb","res","cancelCb","pathArray2repeatTime","loadResArrayWithCorrection","urls","join","_loadResArrayWithCorrection","loadResArray","resources","randomWeighted","array","count","i","length","num","random","weighted","createUUID","S4","substring","shuffle","arr","rIndex","temp","radianFromQ1SubQ2","q1","q2","radian","acos","abs","dot","offsetNodePos","offset","pos","position","add","randomNextFruit","cum","rate","id"],"mappings":";;;;;;;;;;;;;;AAA0HA,MAAAA,O,OAAAA,O;AAAqDC,MAAAA,M,OAAAA,M;AAA+CC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,I,OAAAA,I;AAAsBC,MAAAA,E,OAAAA,E;;AAChPC,MAAAA,Y,uBAAAA,Y;;;;;;;AAULC,MAAAA,G,GAAc,C;AACdC,MAAAA,G,GAAc,C;AACdC,MAAAA,G,GAAc,C;AACdC,MAAAA,G,GAAc,C;AACdC,MAAAA,G,GAAc,C;AACdC,MAAAA,G,GAAc,C;;uBAEPC,K,GAAQ;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACAC,QAAAA,QAAQ,CAACC,MAAD,EAAcC,MAAd,EAA4B;AAClCb,UAAAA,GAAG,CAACY,MAAM,CAACE,GAAR,CAAH,CADkC,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,SAlEgB;;AAoEjBC,QAAAA,QAAQ,CAACD,GAAD,EAAME,QAAgB,GAAG,GAAzB,EAA8B;AACpChB,UAAAA,GAAG,CAACc,GAAD,CAAH,CADoC,CAEpC;AACA;AACD,SAxEgB;;AA0EjB;AACA;AACA;AACA;AAEAhB,QAAAA,OAAO,CAACmB,IAAD,EAAa;AAClB,iBAAOnB,OAAO,CAACmB,IAAD,EAAO,IAAP,CAAP,IAAuBA,IAAI,CAACJ,MAAL,IAAe,IAA7C;AACD,SAjFgB;;AAmFjB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACAK,QAAAA,iBAAiB,CAACC,KAAD,EAAgB;AAC/B,cAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,IAAnB,CAAZ;AACA,cAAII,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAYH,KAAK,GAAG,IAAT,GAAiB,EAA5B,CAAV;AACA,cAAIK,GAAG,GAAGL,KAAK,GAAG,EAAlB;;AACA,cAAIC,KAAK,GAAG,CAAZ,EAAe;AACb,mBAAQ,GAAEA,KAAM,IAAGG,GAAI,GAAvB;AACD,WAFD,MAGK,IAAIA,GAAG,GAAG,CAAV,EAAa;AAChB,mBAAQ,GAAEA,GAAI,IAAGC,GAAI,GAArB;AACD,WAFI,MAGA;AACH,mBAAQ,GAAEA,GAAI,GAAd;AACD;AACF,SAxHgB;;AA0HjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACAC,QAAAA,SAAS,EAAE,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AACrC,cAAIC,UAAU,GAAGC,KAAK,CAACH,QAAQ,GAAG,IAAZ,CAAL,CAAuBI,MAAvB,CAA8B,YAA9B,CAAjB;AACA,cAAIC,QAAQ,GAAGF,KAAK,CAACF,MAAM,GAAG,IAAV,CAAL,CAAqBG,MAArB,CAA4B,YAA5B,CAAf,CAFqC,CAIrC;AACA;;AACA,iBAAOD,KAAK,CAACE,QAAD,CAAL,CAAgBC,IAAhB,CAAqBH,KAAK,CAACD,UAAD,CAA1B,EAAwC,KAAxC,CAAP;AACD,SA7OgB;AA+OjBK,QAAAA,UAAU,EAAE,YAAY;AACtB,cAAIC,SAAS,GAAGL,KAAK,GAAGM,IAAR,EAAhB;AACA,iBAAOD,SAAP;AACD,SAlPgB;AAoPjB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAE,QAAAA,eAAe,EAAE,EApWA;;AAqWjBC,QAAAA,qBAAqB,CAACC,GAAD,EAAcC,IAAd,EAAyBC,gBAAzB,EAAwF;AAC3G,eAAKJ,eAAL,CAAqBE,GAArB,IAA4B,CAA5B;;AACA,eAAKG,sBAAL,CAA4BH,GAA5B,EAAiCC,IAAjC,EAAuCC,gBAAvC;AACD,SAxWgB;;AA0WjBC,QAAAA,sBAAsB,CAACH,GAAD,EAAcC,IAAd,EAAyBC,gBAAzB,EAAgD;AACpEzC,UAAAA,MAAM,CAAC2C,OAAP,CAAeJ,GAAf,EAAoBC,IAApB,EAA0B,CAACI,GAAD,EAAMC,QAAN,KAAmB;AAC3C,gBAAID,GAAJ,EAAS;AACP,mBAAKP,eAAL,CAAqBE,GAArB;;AACA,kBAAI,KAAKF,eAAL,CAAqBE,GAArB,KAA6B,CAAjC,EAAoC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5B,gBAAAA,KAAK,CAACC,QAAN,CAAe;AACbG,kBAAAA,GA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","sourcesContent":["import { Camera, UITransform, Sprite, SpriteFrame, RenderTexture, Vec3, Prefab, instantiate, Node, Material, Color, Vec2, isValid, Texture2D, ImageAsset, Label, MeshRenderer, loader, url, find, getWorldTransformUntilRoot, log, Quat, ccenum, random, v3 } from \"cc\";\nimport { fruit_config } from \"../Config/fruit_config\";\n// import { PlatformJudge } from \"../resources/Platform/PlatformJudge\";\n// import { LocalData } from \"./LocalData\";\n\n\n\nimport { NotificationCenter, NCKeys } from \"./NotificationCenter\";\n\n\n\nlet _ax: number = 0;\nlet _ay: number = 0;\nlet _az: number = 0;\nlet _bx: number = 0;\nlet _by: number = 0;\nlet _bz: number = 0;\n\nexport let Utils = {\n\n  //将一个摄像机的画面输出到一个精灵上，注意精灵必须有spriteFrame\n  // transformCameraToSprite(camera: Camera, sprite: Sprite) {\n  //   const spriteframe = sprite.spriteFrame;\n  //   const sp = new SpriteFrame();\n  //   sp.reset({\n  //     originalSize: spriteframe.getOriginalSize(),\n  //     rect: spriteframe.getRect(),\n  //     offset: spriteframe.getOffset(),\n  //     isRotate: spriteframe.isRotated(),\n  //     borderTop: spriteframe.insetTop,\n  //     borderLeft: spriteframe.insetLeft,\n  //     borderBottom: spriteframe.insetBottom,\n  //     borderRight: spriteframe.insetRight,\n  //   });\n\n  //   const rendetTex = new RenderTexture();\n  //   rendetTex.reset({\n  //     width: sprite.node.getComponent(UITransform).width,\n  //     height: sprite.node.getComponent(UITransform).height,\n  //     colorFormat: RenderTexture.PixelFormat.RGBA8888,\n  //     depthStencilFormat: RenderTexture.DepthStencilFormat.DEPTH_24_STENCIL_8\n  //   });\n  //   camera.targetTexture = rendetTex;\n  //   sp.texture = rendetTex;\n  //   sprite.spriteFrame = sp;\n  // },\n\n  //在有些平台上转化相机不好使\n  // canTransformCameraToSprite() {\n  //   return sys.platform !== sys.QQ_PLAY;\n  // },\n\n  /*\n    {\n      msg:\n      sureCb:\n      cancelCb;\n      leftTitle:'取消',\n      rightTitle:'确定';\n      priority:100,\n    }\n  */\n  // _alertLayerPrefab: null,\n  popAlert(config: any, parent: Node) {\n    log(config.msg);\n    // this.loadResWithCorrection('prefabs/alertLayer/alertLayer', Prefab, (err, prefab) => {\n    //   if (err) return log(err);\n    //   let node = instantiate(prefab);\n    //   node.getComponent(AlertLayerCtrl).init(config);\n    //   if (config.leftTitle) {\n    //     find('bg/cancelButton/Label', node).getComponent(Label).string = config.leftTitle;\n    //   }\n    //   if (config.rightTitle) {\n    //     find('bg/sureButton/Label', node).getComponent(Label).string = config.rightTitle;\n    //   }\n    //   if (config.priority) {\n    //     node._uiProps.uiTransformComp.priority = config.priority;\n    //   }\n    //   parent = parent || find('Canvas') || find('touchCanvas');\n    //   if (isValid(parent)) {\n    //     node.parent = parent;\n    //   }\n    // });\n\n  },\n\n  popToast(msg, duration: number = 1.5) {\n    log(msg);\n    // let toastCtrl: ToastNodeCtrl = find('Canvas/toast').getComponent(ToastNodeCtrl);\n    // toastCtrl.showMsg(msg, duration);\n  },\n\n  // popCompleteToast(galaxyIndex, planetIndex) {\n  //   let ctrl = find('Canvas/playingNode/topNode/completeToast').getComponent(CompleteToastCtrl);\n  //   ctrl.init(galaxyIndex, planetIndex);\n  // },\n\n  isValid(node: Node) {\n    return isValid(node, true) && node.parent != null;\n  },\n\n  //返过点pt 到 begin和end两点之间的直线形成的垂足\n  // getFootOfPerpendicular(pt: Vec3, begin: Vec3, end: Vec3): Vec3 {\n  //   let retVal: Vec3 = new Vec3();\n\n  //   let dx = begin.x - end.x;\n  //   let dy = begin.y - end.y;\n  //   let dz = begin.z - end.z;\n  //   if (Math.abs(dx) < 0.00000001 && Math.abs(dy) < 0.00000001 && Math.abs(dz) < 0.00000001) {\n  //     retVal = begin;\n  //     return retVal;\n  //   }\n\n  //   let u = (pt.x - begin.x) * (begin.x - end.x) +\n  //     (pt.y - begin.y) * (begin.y - end.y) + (pt.z - begin.z) * (begin.z - end.z);\n  //   u = u / ((dx * dx) + (dy * dy) + (dz * dz));\n\n  //   retVal.x = begin.x + u * dx;\n  //   retVal.y = begin.y + u * dy;\n  //   retVal.z = begin.z + u * dz;\n\n  //   return retVal;\n  // },\n\n  //将时间转化为 xx时xx分xx秒\n  formatSecondToHMS(value: number) {\n    let hours = Math.floor(value / 3600);\n    let min = Math.floor((value % 3600) / 60);\n    let sec = value % 60;\n    if (hours > 0) {\n      return `${hours}时${min}分`;\n    }\n    else if (min > 0) {\n      return `${min}分${sec}秒`;\n    }\n    else {\n      return `${sec}秒`;\n    }\n  },\n\n  // formatSecondToHMS2(value: number) {\n  //   let hours = Math.floor(value / 3600);\n  //   let min = Math.floor((value % 3600) / 60);\n  //   let sec = value % 60;\n  //   if (hours > 0) {\n  //     return `${hours}:${min}:${sec}`;\n  //     // return `${hours}时${min}分`;\n  //   }\n  //   else if (min > 0) {\n  //     return `${min}:${numeral(sec).format('00')}`;\n  //   }\n  //   else {\n  //     return `0:${numeral(sec).format('00')}`;\n  //   }\n  // },\n\n  //设置材质的 albedo 值\n  // setMatAlbedo(mat: Material, color: Color) {\n  //   const pass = mat.passes[0];\n  //   const hAlbedo = pass.getHandle('albedo');\n  //   pass.setUniform(hAlbedo, color);\n  // },\n\n  // setMatMainColor(mat: Material, color: Color) {\n  //   const pass = mat.passes[0];\n  //   const hMainColor = pass.getHandle('mainColor');\n  //   pass.setUniform(hMainColor, color);\n  // },\n\n  // //设置材质的 albedo 值\n  // setMatEmissive(mat: Material, color: Color) {\n  //   const pass = mat.passes[0];\n  //   const hEmissive = pass.getHandle('emissive');\n  //   pass.setUniform(hEmissive, color);\n  // },\n\n  //hpProgrss 0-1\n  // _hpProgress: color(0, 0, 0, 0),\n  // setHpColor(mat: Material, hpColor: Color, hpProgress: number) {\n  //   const pass = mat.passes[0];\n  //   const hHpColor = pass.getHandle('hpColor');\n  //   pass.setUniform(hHpColor, hpColor);\n  //   this._hpProgress.r = hpProgress * 255;\n  //   const hHpProgress = pass.getHandle('hpProgress');\n  //   pass.setUniform(hHpProgress, this._hpProgress);\n  // },\n\n\n  // setNodeMatCascade(node: Node, mat: Material, shadowCastingMode: number) {\n  //   let model = node.getComponent(MeshRenderer);\n  //   if (model) {\n  //     model.material = mat;\n  //     model.shadowCastingMode = shadowCastingMode;\n  //   }\n  //   if (node.children.length > 0) {\n  //     for (let i in node.children) {\n  //       this.setNodeMatCascade(node.children[i], mat);\n  //     }\n  //   }\n  // },\n\n\n  //计算两个点之间的距离的平方，再这里不开方以节省性能\n  // vec3DistancePow2(p0: Vec3, p1: Vec3) {\n  //   _ax = p0.x;\n  //   _ay = p0.y;\n  //   _az = p0.z;\n\n  //   _ax -= p1.x;\n  //   _ay -= p1.y;\n  //   _az -= p1.z;\n\n  //   return _ax * _ax + _ay * _ay + _az * _az;\n  // },\n\n  //计算两个点之间的距离的平方，再这里不开方以节省性能\n  // vec2DistancePow2(p0: Vec2, p1: Vec2) {\n  //   _ax = p0.x;\n  //   _ay = p0.y;\n\n  //   _ax -= p1.x;\n  //   _ay -= p1.y;\n  //   return _ax * _ax + _ay * _ay;\n  // },\n\n\n\n\n\n  // smallShake() {\n  //   if (LocalData.isShakeOn) {\n  //     JsNativeBridge.smallShake();\n  //   }\n  // },\n\n  // mediumShake() {\n  //   if (LocalData.isShakeOn) {\n  //     JsNativeBridge.mediumShake();\n  //   }\n  // },\n\n  // heavyShake() {\n  //   if (LocalData.isShakeOn) {\n  //     JsNativeBridge.heavyShake();\n  //   }\n  // },\n\n  //计算 从 toTime到 fromTime 之间经过了几天, 单位秒\n  offsetDay: function (fromTime, toTime) {\n    let fromString = dayjs(fromTime * 1000).format('YYYY-MM-DD');\n    let toString = dayjs(toTime * 1000).format('YYYY-MM-DD');\n\n    // let toDayOfYear = dayjs(toTime * 1000).dayOfYear();\n    // return toDayOfYear - fromDatOfYear;\n    return dayjs(toString).diff(dayjs(fromString), 'day')\n  },\n\n  getCurTime: function () {\n    let localTime = dayjs().unix();\n    return localTime;\n  },\n\n  //计算 从 toTime到 fromTime 之间经过了几天, 单位秒\n  // offsetDay: function (fromTime, toTime) {\n  //   let fromDatOfYear = dayjs(fromTime * 1000).dayOfYear();\n  //   let toDayOfYear = dayjs(toTime * 1000).dayOfYear();\n  //   return toDayOfYear - fromDatOfYear;\n  // },\n\n  //当前是现在时间的多少秒\n  // secondOfDay(second) {\n  //   second += 28800;\n  //   return second % 86400;\n  // },\n\n\n  // //今天的0点0时0分的时间戳\n  // todayBeganTimeStamp() {\n  //   let dayString = dayjs().format('YYYY-MM-DD');\n  //   return dayjs(dayString, 'YYYY-MM-DD').unix();\n  // },\n\n\n  // loadHeadIcon: function (headSprite: Sprite, url: string, width: number) {\n  //   if (url == '' || url == null) return;\n  //   // url = 'https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=1948968049,2186058924&fm=173&app=49&f=JPEG?w=526&h=449&s=D68225E157279F5942D174250300E0C4';\n  //   loader.load({ url: url, type: 'png' }, function (err, image: ImageAsset) {\n  //     if (err) {\n  //       return log(err);\n  //     }\n\n  //     if (isValid(headSprite.node)) {\n  //       let frame = new SpriteFrame();\n  //       frame.texture = image._texture;\n  //       headSprite.spriteFrame = frame;\n  //       headSprite.node.getComponent(UITransform).width = width;\n  //       headSprite.node.getComponent(UITransform).height = width;\n  //     }\n  //   });\n  // },\n\n  // loadHeadIconAndVerification: function (headSprite, url, width, cb) {\n  //   if (url == '' || url == null) return;\n  //   //url = 'https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=1948968049,2186058924&fm=173&app=49&f=JPEG?w=526&h=449&s=D68225E157279F5942D174250300E0C4';\n  //   loader.load({ url: url, type: 'png' }, function (err, image: ImageAsset) {\n  //     if (err) {\n  //       return log(err);\n  //     }\n\n  //     if (isValid(headSprite.node) && cb()) {\n  //       let frame = new SpriteFrame();\n  //       frame.texture = image._texture;\n  //       headSprite.spriteFrame = frame;\n  //       headSprite.node.getComponent(UITransform).width = width;\n  //       headSprite.node.getComponent(UITransform).height = width;\n  //     }\n  //   });\n  // },\n\n\n  // loadAdIcon: function (headSprite: Sprite, url: string, cb: any) {\n  //   if (url == '' || url == null) return;\n  //   // url = 'https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=1948968049,2186058924&fm=173&app=49&f=JPEG?w=526&h=449&s=D68225E157279F5942D174250300E0C4';\n  //   loader.load({ url: url, type: 'png' }, function (err, image: ImageAsset) {\n  //     if (err) {\n  //       return log(err);\n  //     }\n\n  //     if (isValid(headSprite.node)) {\n  //       let frame = new SpriteFrame();\n  //       frame.texture = image._texture;\n  //       headSprite.spriteFrame = frame;\n  //       cb && cb(image.width, image.height);\n  //     }\n  //   });\n  // },\n\n  // formatString('{0},{1},哈哈哈','Hello','World') ==> 'Hello,World,哈哈哈'\n  // formatString: function () {\n  //   if (arguments.length == 0)\n  //     return '';\n\n  //   var str = arguments[0];\n  //   for (var i = 1; i < arguments.length; i++) {\n  //     var re = new RegExp('\\\\{' + (i - 1) + '\\\\}', 'gm');\n  //     str = str.replace(re, arguments[i]);\n  //   }\n  //   return str;\n  // },\n\n  // parseObjectToQuery(obj: object) {\n  //   let strings = [];\n  //   for (let key in obj) {\n  //     if (obj.hasOwnProperty(key)) {\n  //       strings.push(key + '=' + obj[key]);\n  //     }\n  //   }\n  //   return strings.join('&');\n  // },\n\n  // interpolation(curValue: Vec3, triggerValue: Vec3, step: number): Vec3 {\n  //   let betweent = Vec3.distance(triggerValue, curValue);\n  //   if (betweent <= step)\n  //     return triggerValue;\n\n  //   let offset = v3(triggerValue.x - curValue.x, triggerValue.y - curValue.y, triggerValue.z - curValue.z);\n  //   let per = step / betweent;\n  //   curValue.x += (per * offset.x);\n  //   curValue.y += (per * offset.y);\n  //   curValue.z += (per * offset.z);\n  //   return curValue;\n  // },\n\n  // 带有纠错的loadRes\n  path2repeatTime: {} as any,\n  loadResWithCorrection(url: string, type: any, completeCallback: (error: Error, resource: any) => void): void {\n    this.path2repeatTime[url] = 3;\n    this._loadResWithCorrection(url, type, completeCallback);\n  },\n\n  _loadResWithCorrection(url: string, type: any, completeCallback: any) {\n    loader.loadRes(url, type, (err, resource) => {\n      if (err) {\n        this.path2repeatTime[url]--;\n        if (this.path2repeatTime[url] == 0) {\n          // if (PlatformJudge.isWX || PlatformJudge.isQQ) {\n          //   window.wx.showModal({\n          //     title: '错误',\n          //     content: '加载资源失败，请检查网络后点击确定按钮重试',\n          //     success: (res) => {\n          //       this.path2repeatTime[url] = 3;\n          //       this._loadResWithCorrection(url, type, completeCallback);\n          //     }\n          //   })\n          // }\n          // else if (PlatformJudge.isOppo) {\n          //   qg.showModal({\n          //     title: '错误',\n          //     content: '加载资源失败，请检查网络后点击确定按钮重试',\n          //     showCancel: false,\n          //     success: function () {\n          //       this.path2repeatTime[url] = 3;\n          //       this._loadResWithCorrection(url, type, completeCallback);\n          //     }.bind(this)\n          //   })\n          // }\n          // else if (PlatformJudge.isVivo) {\n          //   qg.showDialog({\n          //     title: '错误',\n          //     message: '加载资源失败，请检查网络后点击确定按钮重试',\n          //     buttons: [{ text: '确定', }],\n          //     complete: () => {\n          //       this.path2repeatTime[url] = 3;\n          //       this._loadResWithCorrection(url, type, completeCallback);\n          //     }\n          //   })\n          // }\n          // else if (PlatformJudge.isTT) {\n          //   tt.showModal({\n          //     title: '错误',\n          //     content: '下载资源失败，请检查网络，并且重启游戏',\n          //     showCancel: false,\n          //     success: (res) => {\n          //       this.path2repeatTime[url] = 3;\n          //       this._loadResWithCorrection(url, type, completeCallback);\n          //     }\n          //   })\n          // }\n          // else {\n          Utils.popAlert({\n            msg: '下载资源失败，请检查网络，并且重启游戏',\n            sureCb: (res) => {\n              this.path2repeatTime[url] = 3;\n              this._loadResWithCorrection(url, type, completeCallback);\n            },\n            cancelCb: (res) => {\n              this.path2repeatTime[url] = 3;\n              this._loadResWithCorrection(url, type, completeCallback);\n            },\n          }, null);\n          // }\n        }\n        else {\n          log('重试:' + url + ' 还剩' + this.path2repeatTime[url]);\n          this._loadResWithCorrection(url, type, completeCallback);\n        }\n        return log(err);\n      }\n      completeCallback(err, resource);\n    });\n  },\n\n  //带有纠错的loadRes\n  pathArray2repeatTime: {},\n  loadResArrayWithCorrection(urls: Array<string>, completeCallback: (error: Error, resources: Array<any>) => void): void {\n    this.pathArray2repeatTime[urls.join('_')] = 3;\n    this._loadResArrayWithCorrection(urls, completeCallback);\n  },\n\n  _loadResArrayWithCorrection(urls, completeCallback) {\n    loader.loadResArray(urls, (err, resources) => {\n      if (err) {\n        this.pathArray2repeatTime[urls.join('_')]--;\n        if (this.pathArray2repeatTime[urls.join('_')] == 0) {\n          // if (PlatformJudge.isWX || PlatformJudge.isQQ) {\n          //   window.wx.showModal({\n          //     title: '错误',\n          //     content: '加载资源失败，请检查网络后点击确定按钮重试',\n          //     success: (res) => {\n          //       this.pathArray2repeatTime[urls.join('_')] = 3;\n          //       this._loadResArrayWithCorrection(urls, completeCallback);\n          //     }\n          //   })\n          // }\n          // else if (PlatformJudge.isOppo) {\n          //   qg.showModal({\n          //     title: '错误',\n          //     content: '加载资源失败，请检查网络后点击确定按钮重试',\n          //     showCancel: false,\n          //     success: function () {\n          //       this.pathArray2repeatTime[urls.join('_')] = 3;\n          //       this._loadResArrayWithCorrection(urls, completeCallback);\n          //     }.bind(this)\n          //   })\n          // }\n          // else if (PlatformJudge.isVivo) {\n          //   qg.showDialog({\n          //     title: '错误',\n          //     message: '加载资源失败，请检查网络后点击确定按钮重试',\n          //     buttons: [{ text: '确定', }],\n          //     complete: () => {\n          //       this.pathArray2repeatTime[urls.join('_')] = 3;\n          //       this._loadResArrayWithCorrection(urls, completeCallback);\n          //     }\n          //   })\n          // }\n          // else if (PlatformJudge.isTT) {\n          //   tt.showModal({\n          //     title: '错误',\n          //     content: '下载资源失败，请检查网络，并且重启游戏',\n          //     showCancel: false,\n          //     success: (res) => {\n          //       this.pathArray2repeatTime[urls.join('_')] = 3;\n          //       this._loadResArrayWithCorrection(urls, completeCallback);\n          //     }\n          //   })\n          // }\n          // else {\n          Utils.popAlert({\n            msg: '下载资源失败，请检查网络，并且重启游戏',\n            sureCb: (res) => {\n              this.pathArray2repeatTime[urls.join('_')] = 3;\n              this._loadResArrayWithCorrection(urls, completeCallback);\n            },\n            cancelCb: (res) => {\n              this.pathArray2repeatTime[urls.join('_')] = 3;\n              this._loadResArrayWithCorrection(urls, completeCallback);\n            },\n          }, null);\n          // }\n        }\n        else {\n          log('重试:' + urls.join('_') + ' 还剩' + this.pathArray2repeatTime[urls.join('_')]);\n          this._loadResArrayWithCorrection(urls, completeCallback);\n        }\n        return log(err);\n      }\n      completeCallback(err, resources);\n    });\n  },\n\n\n  /*\n    url:xxx/xxxx,\n    params:{key1:value1, key2:value2},\n    cb(err:string, data:object)\n  */\n  // httpGet(url, params, cb) {\n  //   url = url + '?' + this.parseObjectToQuery(params);\n  //   log(url);\n  //   var http = new XMLHttpRequest();\n  //   http.onloadend = function () {\n  //     if (http.status == 200) {\n  //       log('GET 得到', http.responseText);\n  //       cb(null, JSON.parse(http.responseText));\n  //     }\n  //     else {\n  //       cb(true);\n  //     }\n  //   };\n  //   http.open('GET', url, true);\n  //   http.send();\n  // },\n\n\n  /*\n    接受一个数组  [0.3, 0.4, 0.6]。根据权重返回序号\n  */\n  randomWeighted(array: Array<number>) {\n    let count = 0;\n    for (let i = 0; i < array.length; i++)\n      count += array[i];\n\n    let num = Math.random() * count;\n    let weighted = 0;\n    for (let i = 0; i < array.length; i++) {\n      weighted += array[i];\n      if (num <= weighted) {\n        return i;\n      }\n    }\n\n    return array.length - 1;\n  },\n\n\n\n  // timeToMinute(times) {\n  //   if (times <= 0)\n  //     return '00:00';\n\n  //   var t = '';\n  //   if (times > -1) {\n  //     var min = Math.floor(times / 60) % 60;\n  //     var sec = times % 60;\n\n  //     if (min < 10) { t += \"0\"; }\n  //     t += min + \":\";\n  //     if (sec < 10) { t += \"0\"; }\n  //     t += sec.toFixed(2);\n  //   }\n  //   t = t.substring(0, t.length - 3);\n  //   return t;\n  // },\n\n  createUUID() {\n    function S4() {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n  },\n\n\n\n  shuffle(arr) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n      let rIndex = Math.floor(Math.random() * (i + 1));\n      let temp = arr[rIndex];\n      arr[rIndex] = arr[i];\n      arr[i] = temp;\n    }\n    return arr;\n  },\n\n  //todo 格式化字符串\n  // formatNumber: function (number) {\n  //   //对了，数字单位是KMBT   后面是aa ab ac ad ，，，，，，，，，az ba bb 每1000倍进一位\n  //   // return number;\n  //   let preSolveNumber = function (number) {\n\n  //     let str = number.toExponential(8);\n  //     let strArry = str.split('e');\n  //     let length = parseInt(strArry[1]);\n  //     let hex = Math.floor(length / 3)\n  //     let off = length - hex * 3;\n  //     let preNum = parseFloat(strArry[0]);\n  //     preNum *= Math.pow(10, off);\n  //     // if (hex * 3 == length) {\n  //     //   hex -= 2;\n  //     // }\n  //     // else {\n  //     //   hex--;\n  //     // }\n  //     // if (hex < 0) hex = 0;\n  //     // let preNum = preStr.substr(0, length - hex * 3);\n  //     // preNum = parseInt(preNum);\n  //     return { preNum: preNum/*numeral(preNum).format('0,0')*/, threeZeroMu: hex };\n  //   };\n\n\n  //   let result = preSolveNumber(number);\n  //   if (result.threeZeroMu < 5) {\n  //     let hexStr = ['', 'K', 'M', 'B', 'T'];\n  //     return result.preNum.toFixed(2) + hexStr[result.threeZeroMu];\n  //   }\n  //   else {\n  //     let hex = result.threeZeroMu - 5;\n  //     let first = Math.floor(hex / 26);\n  //     let second = hex % 26;\n  //     // log('first, second', first, second);\n\n  //     if (first > 26) {\n  //       return '999999zz';\n  //     }\n  //     else {\n  //       let last = String.fromCharCode(first + 97) + String.fromCharCode(second + 97);\n  //       return result.preNum.toFixed(2) + last;\n  //     }\n  //   }\n  // },\n\n  // getNumberInfoByLocalData() {\n  //   let galaxyIndex = LocalData.galaxyIndex;\n  //   let planetIndex = LocalData.planetIndex;\n  //   let layerIndex = LocalData.layerIndex;\n\n  //   if (galaxyIndex >= galaxys_config.length) {\n  //     galaxyIndex = galaxys_config.length - 1;\n  //     planetIndex = galaxys_config[galaxyIndex].planets.length - 1;\n  //     layerIndex = galaxys_config[galaxyIndex].planets[planetIndex].layers.length - 1;\n  //   }\n  //   return number_config[`${galaxyIndex}_${planetIndex}_${layerIndex}`];\n\n  // },\n\n  // popMeteorLayer() {\n  //   Utils.loadResWithCorrection('prefabs/meteorLayer/meteorLayer', Prefab, (err, prefab) => {\n  //     if (find('Canvas/meteorLayer')) return;\n  //     if (err) return log(err);\n  //     let node = instantiate(prefab);\n  //     node.parent = find('Canvas');\n  //   })\n  // },\n\n  //计算从四元数q1到四元数q2一共转过了多少弧度\n  radianFromQ1SubQ2(q1: Quat, q2: Quat) {\n    // let q3 = Quat.invert(new Quat, q1);\n    // let q4 = Quat.multiply(new Quat, q3, q2);\n    // let radian = 2 * Math.atan2(Math.sqrt(q4.x * q4.x + q4.y * q4.y + q4.z * q4.z), q4.w);\n    // radian = radian % 3.1415926;\n    // log(radian);\n    let radian = Math.acos(Math.abs(Quat.dot(q1, q2))) * 2;\n    // radian = radian * 180 / Math.PI * 2;\n    log(radian);\n    return radian;\n  },\n\n  // tryPopRuinsLayer(rate) {\n  //   if (find('Canvas/gudieLayer/grayLayer').active)\n  //     return;\n  //   if (find('Canvas/gudieLayer/person').active)\n  //     return;\n  //   if (Math.random() > rate)\n  //     return;\n\n  //   Utils.loadResWithCorrection('prefabs/ruinsLayer/ruinsLayerWX', Prefab, (err, prefab) => {\n  //     if ((find('Canvas/ruinsLayerWX'))) return;\n  //     if (err) return log(err);\n  //     let node = instantiate(prefab);\n  //     node.parent = find('Canvas');\n  //   })\n  // },\n\n  offsetNodePos(node: Node, offset: Vec3) {\n    let pos: Vec3 = v3(node.position);\n    pos.add(offset);\n    node.position = pos;\n  },\n\n  //随机出来下一个水果的id\n  randomNextFruit() {\n    let random = Math.random();\n    let cum = 0;\n    for (let i = 0; i < fruit_config.length; i++) {\n      cum += fruit_config[i].rate;\n      if (cum > random) {\n        return fruit_config[i].id;\n      }\n    }\n\n  }\n};\n\n// globalThis.Utils = Utils;"]}
{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,sBAAa,sFAAb,CAAD,EAAuG,sBAAa,sFAAb,CAAvG,EAA6M,sBAAa,0FAAb,CAA7M,EAAuT,sBAAa,0FAAb,CAAvT,EAAia,sBAAa,0FAAb,CAAja,EAA2gB,sBAAa,oGAAb,CAA3gB,EAA+nB,sBAAa,+GAAb,CAA/nB,EAA8vB,sBAAa,6FAAb,CAA9vB,EAA22B,sBAAa,yFAAb,CAA32B,EAAo9B,sBAAa,2FAAb,CAAp9B,EAA+jC,sBAAa,sFAAb,CAA/jC,EAAqqC,sBAAa,+FAAb,CAArqC,EAAoxC,sBAAa,yFAAb,CAApxC,EAA63C,sBAAa,sFAAb,CAA73C,EAAm+C,sBAAa,0FAAb,CAAn+C,EAA6kD,sBAAa,6FAAb,CAA7kD,EAA0rD,sBAAa,8FAAb,CAA1rD,EAAwyD,sBAAa,sGAAb,CAAxyD,EAA85D,sBAAa,kGAAb,CAA95D,EAAghE,sBAAa,mGAAb,CAAhhE,EAAmoE,sBAAa,yGAAb,CAAnoE,EAA4vE,sBAAa,yFAAb,CAA5vE,EAAq2E,sBAAa,kGAAb,CAAr2E,EAAu9E,sBAAa,mGAAb,CAAv9E,EAA0kF,sBAAa,qFAAb,CAA1kF,EAA+qF,sBAAa,iFAAb,CAA/qF,EAAgxF,sBAAa,qFAAb,CAAhxF,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/Config/fruit_config.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/FruitCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/GameSceneCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/ui/BgNodeCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/ui/CanvasCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/ui/RefreshFruitNodeCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/ui/gameOverLayer/GameOverLayerCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GameScene/ui/touchNodeCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/AudioCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/AudioHelper.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/Base64.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/BaseUILayerCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/Billboard.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/Config.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/GlobalTemp.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LabelTickCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LanguageConfig.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LanguageLabelTicksCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LanguageLabelsCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LanguageSpritesCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LayoutForTopToolAndBanner.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/LocalData.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/NotificationCenter.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/ProgressBarTickCtrl.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/GlobalScript/Utils.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/migrate-canvas.ts'), () => import('file:///Users/mzwine/Codes/other/cocos-apps/watermelon/assets/res/GameOVerLauer2.ts')];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}